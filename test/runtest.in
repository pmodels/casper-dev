echo $MTCORE_RUNTIME_LOAD_LOCK
echo $MTCORE_LOCK_METHOD
echo $MTCORE_RUMTIME_LOAD_OPT

if [ "x$MPIEXEC" = "x" ]; then
    echo "MPIEXEC is undefined"
    exit
fi

path=$(pwd)

for f in `cat ./testlist`;do
    np=4
    nh=1
    export CSP_NG=$nh
    echo "testing $f -np $np -nh $nh ..."
    exec 5>&1
    output=$($MPIEXEC -np $np $path/$f | tee /dev/fd/5 )
    rs="$(echo $output | grep "0 errors"  --count)"
    if [ $rs != 1 ];then
        echo "test failed !"
        echo "$MPIEXEC -np $np $path/$f"
        exit
    fi

    np=8
    nh=1
    export CSP_NG=$nh
    echo "testing $f -np $np -nh $nh ..."
    exec 5>&1
    output=$($MPIEXEC -np $np $path/$f | tee /dev/fd/5 )
    rs="$(echo $output | grep "0 errors"  --count)"
    if [ $rs != 1 ];then
        echo "test failed !"
        echo "$MPIEXEC -np $np $path/$f"
        exit
    fi

    np=8
    nh=2
    export CSP_NG=$nh
    echo "testing $f -np $np -nh $nh ..."
    exec 5>&1
    output=$($MPIEXEC -np $np $path/$f | tee /dev/fd/5 )
    rs="$(echo $output | grep "0 errors"  --count)"
    if [ $rs != 1 ];then
        echo "test failed !"
        echo "$MPIEXEC -np $np $path/$f"
        exit
    fi

    np=10
    nh=2
    export CSP_NG=$nh
    echo "testing $f -np $np -nh $nh ..."
    exec 5>&1
    output=$($MPIEXEC -np $np $path/$f | tee /dev/fd/5 )
    rs="$(echo $output | grep "0 errors"  --count)"
    if [ $rs != 1 ];then
        echo "test failed !"
        echo "$MPIEXEC -np $np $path/$f"
        exit
    fi
    echo ""
    
    np=10
    nh=2
    export CSP_NG=$nh
    export CSP_ASYNC_CONFIG=off
    echo "testing $f -np $np -nh $nh"
    echo " with CSP_ASYNC_CONFIG=off ..."
    exec 5>&1
    output=$($MPIEXEC -np $np $path/$f | tee /dev/fd/5 )
    rs="$(echo $output | grep "0 errors"  --count)"
    if [ $rs != 1 ];then
        echo "test failed !"
        echo "$MPIEXEC -np $np $path/$f"
        exit
    fi
    echo ""
    unset CSP_ASYNC_CONFIG
    
    np=10
    nh=2
    export CSP_NG=$nh
    export CSP_ASYNC_SCHED_LEVEL=anytime
    echo "testing $f -np $np -nh $nh"
    echo " with CSP_ASYNC_SCHED_LEVEL=anytime ..."
    exec 5>&1
    output=$($MPIEXEC -np $np $path/$f | tee /dev/fd/5 )
    rs="$(echo $output | grep "0 errors"  --count)"
    if [ $rs != 1 ];then
        echo "test failed !"
        echo "$MPIEXEC -np $np $path/$f"
        exit
    fi
    echo ""
    unset CSP_ASYNC_SCHED_LEVEL
done
echo "all passed"